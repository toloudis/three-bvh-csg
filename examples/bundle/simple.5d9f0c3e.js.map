{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,2FAoBAC,OAAOC,uBAAyBC,EAAAD,uBAEhC,MAAME,EAAS,CAEdC,YAAa,MACbC,iBAAkB,EAClBC,YAAa,UAEbC,YAAa,SACbC,iBAAkB,EAClBC,YAAa,UAEbC,UAAWR,EAAAS,YACXC,WAAW,EACXC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,EACTC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbC,WAAW,EAEXC,sBAAsB,EACtBC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,kBAAkB,EAClBC,kBAAkB,GAInB,IAAIC,EAAUC,EAAQC,EAAOC,EAAKC,EAC9BC,EAAUC,EACVC,EAAQC,EACRC,EAAcC,EAAiBC,EAAOC,EACtCC,EAAaC,EACbC,EAAYC,EACZC,EAEAC,EADAC,GAAc,EAGlB,MAAMC,EAAc,IAAIC,IA8SxB,SAASC,EAAaC,EAAOC,EAAMC,GAGlC,OADAF,EAAMG,SAASC,UACNH,GAER,IAAK,SACJD,EAAMG,SAAW,IAAIrD,EAAAuD,eACpB,EACAC,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,IACzCI,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,KAE1C,MACD,IAAK,MACJF,EAAMG,SAAW,IAAIrD,EAAA4D,YAAmB,EAAG,EAAG,GAC9C,MACD,IAAK,WACJV,EAAMG,SAAW,IAAIrD,EAAA6D,iBACpB,GAAK,GAAK,EACVL,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,KAE1C,MACD,IAAK,QACJF,EAAMG,SAAW,IAAIrD,EAAA8D,cACpB,GACA,GACAN,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,IACzCI,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,KAE1C,MACD,IAAK,aACJF,EAAMG,SAAW,IAAIrD,EAAA+D,kBACpB,GACA,GACAP,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,GAAI,GAAIP,IAC1CI,KAAKC,MAAOzD,EAAA0D,UAAgBC,KAAM,EAAG,GAAIP,KAE1C,MACD,IAAK,OACJF,EAAMG,SAAWT,EAAUoB,QAK7Bd,EAAMG,SAAWH,EAAMG,SAASY,eAEhC,MAAMC,EAAWhB,EAAMG,SAASc,WAAWD,SACrCE,EAAQ,IAAIC,aAA+B,EAAjBH,EAASI,OACzC,IAAM,IAAIC,EAAI,EAAGC,EAAIJ,EAAMK,OAAQF,EAAIC,EAAGD,GAAK,EAE9CH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EAEjBH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EAEjBH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EACjBH,EAAOG,EAAI,GAAM,EAIlBrB,EAAMG,SAASqB,aAAc,QAAS,IAAI1E,EAAA2E,gBAAuBP,EAAO,IACxEtB,GAAc,EAIf,SAAS8B,IAERC,sBAAuBD,GAEvBzC,EAAO2C,MAAMC,EAAIvB,KAAKwB,IAAK7C,EAAO2C,MAAMC,EAAG,KAC3C5C,EAAO2C,MAAMG,EAAIzB,KAAKwB,IAAK7C,EAAO2C,MAAMG,EAAG,KAC3C9C,EAAO2C,MAAMI,EAAI1B,KAAKwB,IAAK7C,EAAO2C,MAAMI,EAAG,KAE3C,MAAM5D,EAAuBjB,EAAOiB,qBACpC,GAAKwB,EAAc,CAElBA,GAAc,EAEdZ,EAAOiD,oBACPhD,EAAOgD,oBAEPzC,EAAW0C,SACXzC,EAAWyC,SAEX,MAAMC,EAAYnF,OAAOoF,YAAYC,MACrC1C,EAAa2C,MAAMC,QAAUnE,EAC7BuB,EAAaxB,UAAYhB,EAAOgB,UAChCwB,EAAa6C,SAAUxD,EAAQC,EAAQ9B,EAAOO,UAAWwB,GAIxDA,EAAauD,SAFTtF,EAAOgB,UAEae,EAAauD,SAASC,KAAKC,GAAK9C,EAAY+C,IAAKD,KAIjDtD,EAIzB,MAAMwD,EAAY7F,OAAOoF,YAAYC,MAAQF,EAC7CtD,EAAgBiE,UAAY,GAAID,EAAUE,QAAS,OAE9C3E,IAEJkB,EAAY0D,SAAUrD,EAAa2C,MAAMW,mBAEzC1D,EAAW2D,aAAc,IACrBvD,EAAa2C,MAAMa,oBAAoBC,yBACvCzD,EAAa2C,MAAMa,oBAAoBE,6BAsB7ClE,EAAgBmE,QAAUnG,EAAOS,UACjCoB,EAAOsE,QAAUnG,EAAOU,eACxBoB,EAAOqE,QAAUnG,EAAOU,eAExBuB,EAAMmE,WAAapG,EAAOY,QAE1BgB,EAAkBwD,QAAUpF,EAAOW,gBACnCiB,EAAkBuE,QAAUnG,EAAOW,gBAEnCwB,EAAYgE,QAAUlF,GAAwBjB,EAAOkB,yBACrDkB,EAAW+D,QAAUlF,GAAwBjB,EAAOmB,6BAEpDkB,EAAW8D,QAAUnG,EAAOoB,iBAC5BkB,EAAW6D,QAAUnG,EAAOqB,iBAE5BC,EAAS+E,OAAQ7E,EAAOD,IA9bzB+E,iBAIC5E,EAAkB6E,SAASC,eAAgB,UAG3ClF,EAAW,IAAI3B,EAAA8G,cAAqB,CAAEC,WAAW,IACjDpF,EAASqF,cAAe9G,OAAO+G,kBAC/BtF,EAASuF,QAAShH,OAAOiH,WAAYjH,OAAOkH,aAC5CzF,EAAS0F,cARO,QAQiB,GACjC1F,EAAS2F,UAAU7B,SAAU,EAC7B9D,EAAS2F,UAAUnE,KAAOnD,EAAAuH,iBAC1BX,SAASY,KAAKC,YAAa9F,EAAS+F,YAGpC7F,EAAQ,IAAI7B,EAAA2H,MAGZrF,EAAQ,IAAItC,EAAA4H,iBAAwB,SAAU,GAC9CtF,EAAM4B,SAAS2D,KAAK,EAAK,EAAG,GAC5BhG,EAAMiG,IAAKxF,EAAOA,EAAMyF,QACxBlG,EAAMiG,IAAK,IAAI9H,EAAAgI,aAAoB,SAAU,KAG7C,MAAMC,EAAY3F,EAAM4F,OAAOC,OA0E/B,IAAIC,EAzEJ9F,EAAMmE,YAAa,EACnBnE,EAAM4F,OAAOG,QAAQC,UAAW,MAChChG,EAAM4F,OAAOK,KAAO,KACpBjG,EAAM4F,OAAOM,WAAa,IAE1BP,EAAUQ,KAAOR,EAAUS,QAAS,IACpCT,EAAUU,MAAQV,EAAUW,IAAM,IAClCX,EAAUY,yBAGVjH,EAAS,IAAI5B,EAAA8I,kBAAyB,GAAI5I,OAAOiH,WAAajH,OAAOkH,YAAa,GAAK,IACvFxF,EAAOsC,SAAS2D,IAAK,EAAG,EAAG,GAC3BjG,EAAOmH,IAAM,IACbnH,EAAOiH,yBAGP7G,EAAW,IAAI,EAAAgH,EAAAC,eAAerH,EAAQD,EAAS+F,YAE/CzF,EAAoB,IAAI,EAAAiH,EAAAC,mBAAmBvH,EAAQD,EAAS+F,YAC5DzF,EAAkBiF,QAAS,KAC3BjF,EAAkBmH,iBAAkB,oBAAoBC,IAEvDrH,EAASyD,SAAY4D,EAAEC,SAGxBrH,EAAkBmH,iBAAkB,gBAAgB,KAEnDtG,GAAc,KAGfjB,EAAMiG,IAAK7F,GAGXY,EAAe,IAAI,EAAAzC,EAAAmJ,WACnB1G,EAAasB,WAAa,CAAE,WAAY,UAGxCjC,EAAS,IAAI,EAAA9B,EAAAoJ,OAAO,IAAIxJ,EAAA4D,YAAqB,IAAI,EAAAxD,EAAAqJ,eACjDtH,EAAS,IAAI,EAAA/B,EAAAoJ,OAAO,IAAIxJ,EAAA4D,YAAqB,IAAI,EAAAxD,EAAAqJ,eACjDtH,EAAO+B,SAAS2D,KAAK,IAAQ,IAAM,GACnC1F,EAAO2C,MAAMwD,UAAW,KAExBrF,EAAaf,EAAQ7B,EAAOC,YAAaD,EAAOE,kBAChD0C,EAAad,EAAQ9B,EAAOI,YAAaJ,EAAOK,kBAGhDwB,EAAOyD,SAAS+D,QAAU,IAC1BxH,EAAOyD,SAASgE,aAAc,EAC9BzH,EAAOyD,SAASiE,YAAa,EAC7B1H,EAAOyD,SAASkE,eAAgB,EAChC3H,EAAOyD,SAASmE,oBAAsB,GACtC5H,EAAOyD,SAASoE,mBAAqB,GACrC7H,EAAOyD,SAASqE,KAAOhK,EAAAiK,WACvB/H,EAAOyD,SAASuE,oBAAqB,EAErC/H,EAAOwD,SAAS+D,QAAU,IAC1BvH,EAAOwD,SAASgE,aAAc,EAC9BxH,EAAOwD,SAASiE,YAAa,EAC7BzH,EAAOwD,SAASkE,eAAgB,EAChC1H,EAAOwD,SAASmE,oBAAsB,GACtC3H,EAAOwD,SAASoE,mBAAqB,GACrC5H,EAAOwD,SAASqE,KAAOhK,EAAAiK,WACvB9H,EAAOwD,SAASuE,oBAAqB,EACrC/H,EAAOwD,SAASwE,UAAY,IAC5BhI,EAAOwD,SAASyE,MAAMvC,IAAK,UAE3B3F,EAAOmI,eAAgB,EACvBlI,EAAOkI,eAAgB,EACvBpI,EAAkBqI,OAAQnI,GAE1BN,EAAMiG,IAAK5F,EAAQC,GAInBiG,EAAMlG,EAAOyD,SAAS3B,QACtBoE,EAAI4B,KAAOhK,EAAAuK,UACXnC,EAAIsB,QAAU,EACdtB,EAAIuB,aAAc,EAClBvB,EAAIwB,YAAa,EACjB7G,EAAY8E,IAAK3F,EAAOyD,SAAUyC,GAElCA,EAAMjG,EAAOwD,SAAS3B,QACtBoE,EAAI4B,KAAOhK,EAAAuK,UACXnC,EAAIsB,QAAU,EACdtB,EAAIuB,aAAc,EAClBvB,EAAIwB,YAAa,EACjB7G,EAAY8E,IAAK1F,EAAOwD,SAAUyC,GAElCrF,EAAYyH,SAAS,CAAEC,EAAIC,KAE1BD,EAAGE,WAAatK,EAAOe,YACvBsJ,EAAGC,WAAatK,EAAOe,eAKxBgB,EAAe,IAAIpC,EAAA4K,KAAY,IAAI5K,EAAA6K,eAAwB,IAAI7K,EAAA8K,qBAA4B,CAC1F3J,aAAa,EACb0I,eAAe,EACfE,mBAAoB,GACpBD,oBAAqB,MAEtB1H,EAAaqE,YAAa,EAC1BrE,EAAaiI,eAAgB,EAC7B9H,EAAmBH,EAAauD,SAChC9D,EAAMiG,IAAK1F,GAGXC,EAAkB,IAAIrC,EAAA4K,KAAYxI,EAAaiB,SAAU,IAAIrD,EAAA+K,kBAAyB,CACrFjK,WAAW,EACXsJ,MAAO,EACPV,QAAS,IACTC,aAAa,KAEd9H,EAAMiG,IAAKzF,GAGXG,EAAc,IAAI,EAAApC,EAAA4K,aAClBxI,EAAY4H,MAAMvC,IAAK,UACvBhG,EAAMiG,IAAKtF,GAEXC,EAAa,IAAI,EAAArC,EAAA6K,mBACjBxI,EAAW2H,MAAMvC,IAAK,OACtBhG,EAAMiG,IAAKrF,GAEXC,EAAa,IAAI,EAAAwI,EAAAC,mBAAmBjJ,EAAQ,IAC5CS,EAAa,IAAI,EAAAuI,EAAAC,mBAAmBhJ,EAAQ,IAC5CN,EAAMiG,IAAKpF,EAAYC,GAGvB,MAAMyI,QAAa,IAAI,EAAAC,EAAAC,aACrBC,kBAAmBC,EAAAC,gBACnBC,UAAW,iGAEb9I,EAAYwI,EAAKO,MAAMC,SAAU,GAAIvI,SACrCT,EAAUiJ,uBAGV/J,EAAM,IAAI,EAAAgK,EAAAC,KACVjK,EAAIgG,IAAKzH,EAAQ,YAAa,C,SAAED,EAAA4L,S,YAAU5L,EAAAS,Y,aAAaT,EAAA6L,a,WAAc7L,EAAA8L,aAAeC,UAAU,KAE7FrJ,GAAc,KAGfhB,EAAIgG,IAAKzH,EAAQ,kBACjByB,EAAIgG,IAAKzH,EAAQ,mBACjByB,EAAIgG,IAAKzH,EAAQ,WACjByB,EAAIgG,IAAKzH,EAAQ,aAAc8L,UAAU,IAAMrJ,GAAc,IAC7DhB,EAAIgG,IAAKzH,EAAQ,gBAAiB8L,UAAUC,IAE3ClK,EAAOyD,SAASzE,aAAekL,EAC/BlK,EAAOyD,SAAS0G,aAAc,EAE9BlK,EAAOwD,SAASzE,aAAekL,EAC/BjK,EAAOwD,SAAS0G,aAAc,EAE9BtJ,EAAYyH,SAAS3E,IAEpBA,EAAE3E,aAAekL,EACjBvG,EAAEwG,aAAc,KAIjBxJ,EAAasB,WAAaiI,EACzB,CAAE,QAAS,WAAY,UACvB,CAAE,WAAY,UAEftJ,GAAc,KAGfhB,EAAIgG,IAAKzH,EAAQ,eAAgB8L,UAAUC,IAE1CrJ,EAAYyH,SAAS,CAAEC,EAAIC,KAE1BD,EAAGE,WAAayB,EAChB1B,EAAGC,WAAayB,QAKlBtK,EAAIgG,IAAKzH,EAAQ,eAAgB8L,UAAUC,IAE1ClK,EAAOyD,SAASxE,YAAciL,EAC9BlK,EAAOyD,SAAS0G,aAAc,EAE9BlK,EAAOwD,SAASxE,YAAciL,EAC9BjK,EAAOwD,SAAS0G,aAAc,EAE9BtJ,EAAYyH,SAAS3E,IAEpBA,EAAE1E,YAAciL,EAChBvG,EAAEwG,aAAc,QAMlB,MAAMC,EAAexK,EAAIyK,UAAW,WACpCD,EAAaxE,IAAKzH,EAAQ,cAAe,CAAE,SAAU,MAAO,WAAY,QAAS,aAAc,SAAWmM,KAAM,SAAUL,UAAUC,IAEnInJ,EAAaf,EAAQkK,EAAG/L,EAAOE,qBAGhC+L,EAAaxE,IAAKzH,EAAQ,mBAAoB,EAAG,GAAImM,KAAM,cAAeL,UAAUC,IAEnFnJ,EAAaf,EAAQ7B,EAAOC,YAAa8L,MAG1CE,EAAaG,SAAUpM,EAAQ,eAAgB8L,UAAUC,IAExDlK,EAAOyD,SAASyE,MAAMvC,IAAKuE,GAC3BrJ,EAAY+C,IAAK5D,EAAOyD,UAAWyE,MAAMvC,IAAKuE,MAI/C,MAAMM,EAAe5K,EAAIyK,UAAW,WACpCG,EAAa5E,IAAKzH,EAAQ,cAAe,CAAE,SAAU,MAAO,WAAY,QAAS,aAAc,SAAWmM,KAAM,SAAUL,UAAUC,IAEnInJ,EAAad,EAAQiK,EAAG/L,EAAOK,qBAGhCgM,EAAa5E,IAAKzH,EAAQ,mBAAoB,EAAG,GAAImM,KAAM,cAAeL,UAAUC,IAEnFnJ,EAAad,EAAQ9B,EAAOI,YAAa2L,MAG1CM,EAAaD,SAAUpM,EAAQ,eAAgB8L,UAAUC,IAExDjK,EAAOwD,SAASyE,MAAMvC,IAAKuE,GAC3BrJ,EAAY+C,IAAK3D,EAAOwD,UAAWyE,MAAMvC,IAAKuE,MAI/C,MAAMO,EAAc7K,EAAIyK,UAAW,SACnCI,EAAY7E,IAAKzH,EAAQ,wBAAyB8L,UAAU,IAAMrJ,GAAc,IAChF6J,EAAY7E,IAAKzH,EAAQ,4BACzBsM,EAAY7E,IAAKzH,EAAQ,gCACzBsM,EAAY7E,IAAKzH,EAAQ,aACzBsM,EAAY7E,IAAKzH,EAAQ,oBACzBsM,EAAY7E,IAAKzH,EAAQ,oBAEzBH,OAAOkJ,iBAAkB,UAAU,WAElCxH,EAAOgL,OAAS1M,OAAOiH,WAAajH,OAAOkH,YAC3CxF,EAAOiH,yBAEPlH,EAASuF,QAAShH,OAAOiH,WAAYjH,OAAOkH,gBAE1C,GAEHlH,OAAOkJ,iBAAkB,WAAW,SAAWC,GAE9C,OAASA,EAAEwD,MAEV,IAAK,OACJ5K,EAAkB6K,QAAS,aAC3B,MACD,IAAK,OACJ7K,EAAkB6K,QAAS,UAC3B,MACD,IAAK,OACJ7K,EAAkB6K,QAAS,aAO9BlI,IAxSDmI","sources":["examples/simple.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { MeshBVHVisualizer } from 'three-mesh-bvh';\nimport {\n\tBrush,\n\tEvaluator,\n\tEdgesHelper,\n\tTriangleSetHelper,\n\tlogTriangleDefinitions,\n\tGridMaterial,\n\tADDITION,\n\tSUBTRACTION,\n\tINTERSECTION,\n\tDIFFERENCE,\n} from '..';\n\nwindow.logTriangleDefinitions = logTriangleDefinitions;\n\nconst params = {\n\n\tbrush1Shape: 'box',\n\tbrush1Complexity: 1,\n\tbrush1Color: '#ffffff',\n\n\tbrush2Shape: 'sphere',\n\tbrush2Complexity: 1,\n\tbrush2Color: '#E91E63',\n\n\toperation: SUBTRACTION,\n\twireframe: false,\n\tdisplayBrushes: true,\n\tdisplayControls: true,\n\tshadows: true,\n\tvertexColors: false,\n\tflatShading: false,\n\tgridTexture: false,\n\tuseGroups: true,\n\n\tenableDebugTelemetry: true,\n\tdisplayIntersectionEdges: false,\n\tdisplayTriangleIntersections: false,\n\tdisplayBrush1BVH: false,\n\tdisplayBrush2BVH: false,\n\n};\n\nlet renderer, camera, scene, gui, outputContainer;\nlet controls, transformControls;\nlet brush1, brush2;\nlet resultObject, wireframeResult, light, originalMaterial;\nlet edgesHelper, trisHelper;\nlet bvhHelper1, bvhHelper2;\nlet bunnyGeom;\nlet needsUpdate = true;\nlet csgEvaluator;\n\nconst materialMap = new Map();\n\ninit();\n\nasync function init() {\n\n\tconst bgColor = 0x111111;\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\t// lights\n\tlight = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( - 1, 2, 3 );\n\tscene.add( light, light.target );\n\tscene.add( new THREE.AmbientLight( 0xb0bec5, 0.1 ) );\n\n\t// shadows\n\tconst shadowCam = light.shadow.camera;\n\tlight.castShadow = true;\n\tlight.shadow.mapSize.setScalar( 4096 );\n\tlight.shadow.bias = 1e-5;\n\tlight.shadow.normalBias = 1e-2;\n\n\tshadowCam.left = shadowCam.bottom = - 2.5;\n\tshadowCam.right = shadowCam.top = 2.5;\n\tshadowCam.updateProjectionMatrix();\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 1, 2, 4 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\ttransformControls.setSize( 0.75 );\n\ttransformControls.addEventListener( 'dragging-changed', e => {\n\n\t\tcontrols.enabled = ! e.value;\n\n\t} );\n\ttransformControls.addEventListener( 'objectChange', () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tscene.add( transformControls );\n\n\t// bunny mesh has no UVs so skip that attribute\n\tcsgEvaluator = new Evaluator();\n\tcsgEvaluator.attributes = [ 'position', 'normal' ];\n\n\t// initialize brushes\n\tbrush1 = new Brush( new THREE.BoxGeometry(), new GridMaterial() );\n\tbrush2 = new Brush( new THREE.BoxGeometry(), new GridMaterial() );\n\tbrush2.position.set( - 0.75, 0.75, 0 );\n\tbrush2.scale.setScalar( 0.75 );\n\n\tupdateBrush( brush1, params.brush1Shape, params.brush1Complexity );\n\tupdateBrush( brush2, params.brush2Shape, params.brush2Complexity );\n\n\t// initialize materials\n\tbrush1.material.opacity = 0.15;\n\tbrush1.material.transparent = true;\n\tbrush1.material.depthWrite = false;\n\tbrush1.material.polygonOffset = true;\n\tbrush1.material.polygonOffsetFactor = 0.2;\n\tbrush1.material.polygonOffsetUnits = 0.2;\n\tbrush1.material.side = THREE.DoubleSide;\n\tbrush1.material.premultipliedAlpha = true;\n\n\tbrush2.material.opacity = 0.15;\n\tbrush2.material.transparent = true;\n\tbrush2.material.depthWrite = false;\n\tbrush2.material.polygonOffset = true;\n\tbrush2.material.polygonOffsetFactor = 0.2;\n\tbrush2.material.polygonOffsetUnits = 0.2;\n\tbrush2.material.side = THREE.DoubleSide;\n\tbrush2.material.premultipliedAlpha = true;\n\tbrush2.material.roughness = 0.25;\n\tbrush2.material.color.set( 0xE91E63 );\n\n\tbrush1.receiveShadow = true;\n\tbrush2.receiveShadow = true;\n\ttransformControls.attach( brush2 );\n\n\tscene.add( brush1, brush2 );\n\n\t// create material map for transparent to opaque variants\n\tlet mat;\n\tmat = brush1.material.clone();\n\tmat.side = THREE.FrontSide;\n\tmat.opacity = 1;\n\tmat.transparent = false;\n\tmat.depthWrite = true;\n\tmaterialMap.set( brush1.material, mat );\n\n\tmat = brush2.material.clone();\n\tmat.side = THREE.FrontSide;\n\tmat.opacity = 1;\n\tmat.transparent = false;\n\tmat.depthWrite = true;\n\tmaterialMap.set( brush2.material, mat );\n\n\tmaterialMap.forEach( ( m1, m2 ) => {\n\n\t\tm1.enableGrid = params.gridTexture;\n\t\tm2.enableGrid = params.gridTexture;\n\n\t} );\n\n\t// add object displaying the result\n\tresultObject = new THREE.Mesh( new THREE.BufferGeometry(), new THREE.MeshStandardMaterial( {\n\t\tflatShading: false,\n\t\tpolygonOffset: true,\n\t\tpolygonOffsetUnits: 0.1,\n\t\tpolygonOffsetFactor: 0.1,\n\t} ) );\n\tresultObject.castShadow = true;\n\tresultObject.receiveShadow = true;\n\toriginalMaterial = resultObject.material;\n\tscene.add( resultObject );\n\n\t// add wireframe representation\n\twireframeResult = new THREE.Mesh( resultObject.geometry, new THREE.MeshBasicMaterial( {\n\t\twireframe: true,\n\t\tcolor: 0,\n\t\topacity: 0.15,\n\t\ttransparent: true,\n\t} ) );\n\tscene.add( wireframeResult );\n\n\t// helpers\n\tedgesHelper = new EdgesHelper();\n\tedgesHelper.color.set( 0xE91E63 );\n\tscene.add( edgesHelper );\n\n\ttrisHelper = new TriangleSetHelper();\n\ttrisHelper.color.set( 0x00BCD4 );\n\tscene.add( trisHelper );\n\n\tbvhHelper1 = new MeshBVHVisualizer( brush1, 20 );\n\tbvhHelper2 = new MeshBVHVisualizer( brush2, 20 );\n\tscene.add( bvhHelper1, bvhHelper2 );\n\n\t// load bunny geometry\n\tconst gltf = await new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb' );\n\n\tbunnyGeom = gltf.scene.children[ 0 ].geometry;\n\tbunnyGeom.computeVertexNormals();\n\n\t// gui\n\tgui = new GUI();\n\tgui.add( params, 'operation', { ADDITION, SUBTRACTION, INTERSECTION, DIFFERENCE } ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tgui.add( params, 'displayBrushes' );\n\tgui.add( params, 'displayControls' );\n\tgui.add( params, 'shadows' );\n\tgui.add( params, 'useGroups' ).onChange( () => needsUpdate = true );\n\tgui.add( params, 'vertexColors' ).onChange( v => {\n\n\t\tbrush1.material.vertexColors = v;\n\t\tbrush1.material.needsUpdate = true;\n\n\t\tbrush2.material.vertexColors = v;\n\t\tbrush2.material.needsUpdate = true;\n\n\t\tmaterialMap.forEach( m => {\n\n\t\t\tm.vertexColors = v;\n\t\t\tm.needsUpdate = true;\n\n\t\t} );\n\n\t\tcsgEvaluator.attributes = v ?\n\t\t\t[ 'color', 'position', 'normal' ] :\n\t\t\t[ 'position', 'normal' ];\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tgui.add( params, 'gridTexture' ).onChange( v => {\n\n\t\tmaterialMap.forEach( ( m1, m2 ) => {\n\n\t\t\tm1.enableGrid = v;\n\t\t\tm2.enableGrid = v;\n\n\t\t} );\n\n\t} );\n\tgui.add( params, 'flatShading' ).onChange( v => {\n\n\t\tbrush1.material.flatShading = v;\n\t\tbrush1.material.needsUpdate = true;\n\n\t\tbrush2.material.flatShading = v;\n\t\tbrush2.material.needsUpdate = true;\n\n\t\tmaterialMap.forEach( m => {\n\n\t\t\tm.flatShading = v;\n\t\t\tm.needsUpdate = true;\n\n\t\t} );\n\n\t} );\n\n\tconst brush1Folder = gui.addFolder( 'brush 1' );\n\tbrush1Folder.add( params, 'brush1Shape', [ 'sphere', 'box', 'cylinder', 'torus', 'torus knot', 'mesh' ] ).name( 'shape' ).onChange( v => {\n\n\t\tupdateBrush( brush1, v, params.brush1Complexity );\n\n\t} );\n\tbrush1Folder.add( params, 'brush1Complexity', 0, 2 ).name( 'complexity' ).onChange( v => {\n\n\t\tupdateBrush( brush1, params.brush1Shape, v );\n\n\t} );\n\tbrush1Folder.addColor( params, 'brush1Color' ).onChange( v => {\n\n\t\tbrush1.material.color.set( v );\n\t\tmaterialMap.get( brush1.material ).color.set( v );\n\n\t} );\n\n\tconst brush2Folder = gui.addFolder( 'brush 2' );\n\tbrush2Folder.add( params, 'brush2Shape', [ 'sphere', 'box', 'cylinder', 'torus', 'torus knot', 'mesh' ] ).name( 'shape' ).onChange( v => {\n\n\t\tupdateBrush( brush2, v, params.brush2Complexity );\n\n\t} );\n\tbrush2Folder.add( params, 'brush2Complexity', 0, 2 ).name( 'complexity' ).onChange( v => {\n\n\t\tupdateBrush( brush2, params.brush2Shape, v );\n\n\t} );\n\tbrush2Folder.addColor( params, 'brush2Color' ).onChange( v => {\n\n\t\tbrush2.material.color.set( v );\n\t\tmaterialMap.get( brush2.material ).color.set( v );\n\n\t} );\n\n\tconst debugFolder = gui.addFolder( 'debug' );\n\tdebugFolder.add( params, 'enableDebugTelemetry' ).onChange( () => needsUpdate = true );\n\tdebugFolder.add( params, 'displayIntersectionEdges' );\n\tdebugFolder.add( params, 'displayTriangleIntersections' );\n\tdebugFolder.add( params, 'wireframe' );\n\tdebugFolder.add( params, 'displayBrush1BVH' );\n\tdebugFolder.add( params, 'displayBrush2BVH' );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW':\n\t\t\t\ttransformControls.setMode( 'translate' );\n\t\t\t\tbreak;\n\t\t\tcase 'KeyE':\n\t\t\t\ttransformControls.setMode( 'rotate' );\n\t\t\t\tbreak;\n\t\t\tcase 'KeyR':\n\t\t\t\ttransformControls.setMode( 'scale' );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t} );\n\n\trender();\n\n}\n\nfunction updateBrush( brush, type, complexity ) {\n\n\tbrush.geometry.dispose();\n\tswitch ( type ) {\n\n\t\tcase 'sphere':\n\t\t\tbrush.geometry = new THREE.SphereGeometry(\n\t\t\t\t1,\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 5, 32, complexity ) ),\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 5, 16, complexity ) )\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'box':\n\t\t\tbrush.geometry = new THREE.BoxGeometry( 1, 1, 1 );\n\t\t\tbreak;\n\t\tcase 'cylinder':\n\t\t\tbrush.geometry = new THREE.CylinderGeometry(\n\t\t\t\t0.5, 0.5, 1,\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 5, 32, complexity ) ),\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'torus':\n\t\t\tbrush.geometry = new THREE.TorusGeometry(\n\t\t\t\t0.6,\n\t\t\t\t0.2,\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 4, 16, complexity ) ),\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 6, 30, complexity ) )\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'torus knot':\n\t\t\tbrush.geometry = new THREE.TorusKnotGeometry(\n\t\t\t\t0.6,\n\t\t\t\t0.2,\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 16, 64, complexity ) ),\n\t\t\t\tMath.round( THREE.MathUtils.lerp( 4, 16, complexity ) ),\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'mesh':\n\t\t\tbrush.geometry = bunnyGeom.clone();\n\t\t\tbreak;\n\n\t}\n\n\tbrush.geometry = brush.geometry.toNonIndexed();\n\n\tconst position = brush.geometry.attributes.position;\n\tconst array = new Float32Array( position.count * 3 );\n\tfor ( let i = 0, l = array.length; i < l; i += 9 ) {\n\n\t\tarray[ i + 0 ] = 1;\n\t\tarray[ i + 1 ] = 0;\n\t\tarray[ i + 2 ] = 0;\n\n\t\tarray[ i + 3 ] = 0;\n\t\tarray[ i + 4 ] = 1;\n\t\tarray[ i + 5 ] = 0;\n\n\t\tarray[ i + 6 ] = 0;\n\t\tarray[ i + 7 ] = 0;\n\t\tarray[ i + 8 ] = 1;\n\n\t}\n\n\tbrush.geometry.setAttribute( 'color', new THREE.BufferAttribute( array, 3 ) );\n\tneedsUpdate = true;\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tbrush2.scale.x = Math.max( brush2.scale.x, 0.01 );\n\tbrush2.scale.y = Math.max( brush2.scale.y, 0.01 );\n\tbrush2.scale.z = Math.max( brush2.scale.z, 0.01 );\n\n\tconst enableDebugTelemetry = params.enableDebugTelemetry;\n\tif ( needsUpdate ) {\n\n\t\tneedsUpdate = false;\n\n\t\tbrush1.updateMatrixWorld();\n\t\tbrush2.updateMatrixWorld();\n\n\t\tbvhHelper1.update();\n\t\tbvhHelper2.update();\n\n\t\tconst startTime = window.performance.now();\n\t\tcsgEvaluator.debug.enabled = enableDebugTelemetry;\n\t\tcsgEvaluator.useGroups = params.useGroups;\n\t\tcsgEvaluator.evaluate( brush1, brush2, params.operation, resultObject );\n\n\t\tif ( params.useGroups ) {\n\n\t\t\tresultObject.material = resultObject.material.map( m => materialMap.get( m ) );\n\n\t\t} else {\n\n\t\t\tresultObject.material = originalMaterial;\n\n\t\t}\n\n\t\tconst deltaTime = window.performance.now() - startTime;\n\t\toutputContainer.innerText = `${ deltaTime.toFixed( 3 ) }ms`;\n\n\t\tif ( enableDebugTelemetry ) {\n\n\t\t\tedgesHelper.setEdges( csgEvaluator.debug.intersectionEdges );\n\n\t\t\ttrisHelper.setTriangles( [\n\t\t\t\t...csgEvaluator.debug.triangleIntersectsA.getTrianglesAsArray(),\n\t\t\t\t...csgEvaluator.debug.triangleIntersectsA.getIntersectionsAsArray()\n\t\t\t] );\n\n\t\t}\n\n\t}\n\n\t// window.CSG_DEBUG = csgEvaluator.debug;\n\t// if ( window.TRI !== undefined ) {\n\n\t// \ttrisHelper.setTriangles( [\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getTrianglesAsArray( window.TRI ),\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getIntersectionsAsArray( window.TRI )\n\t// \t] );\n\n\t// \tlogTriangleDefinitions(\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getTrianglesAsArray( window.TRI ),\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getIntersectionsAsArray( window.TRI )\n\t// \t);\n\n\t// }\n\n\twireframeResult.visible = params.wireframe;\n\tbrush1.visible = params.displayBrushes;\n\tbrush2.visible = params.displayBrushes;\n\n\tlight.castShadow = params.shadows;\n\n\ttransformControls.enabled = params.displayControls;\n\ttransformControls.visible = params.displayControls;\n\n\tedgesHelper.visible = enableDebugTelemetry && params.displayIntersectionEdges;\n\ttrisHelper.visible = enableDebugTelemetry && params.displayTriangleIntersections;\n\n\tbvhHelper1.visible = params.displayBrush1BVH;\n\tbvhHelper2.visible = params.displayBrush2BVH;\n\n\trenderer.render( scene, camera );\n\n}\n\n\n\n"],"names":["$ilwiq","parcelRequire","window","logTriangleDefinitions","$4CEV9","$07b869f43f84f999$var$params","brush1Shape","brush1Complexity","brush1Color","brush2Shape","brush2Complexity","brush2Color","operation","SUBTRACTION","wireframe","displayBrushes","displayControls","shadows","vertexColors","flatShading","gridTexture","useGroups","enableDebugTelemetry","displayIntersectionEdges","displayTriangleIntersections","displayBrush1BVH","displayBrush2BVH","$07b869f43f84f999$var$renderer","$07b869f43f84f999$var$camera","$07b869f43f84f999$var$scene","$07b869f43f84f999$var$gui","$07b869f43f84f999$var$outputContainer","$07b869f43f84f999$var$controls","$07b869f43f84f999$var$transformControls","$07b869f43f84f999$var$brush1","$07b869f43f84f999$var$brush2","$07b869f43f84f999$var$resultObject","$07b869f43f84f999$var$wireframeResult","$07b869f43f84f999$var$light","$07b869f43f84f999$var$originalMaterial","$07b869f43f84f999$var$edgesHelper","$07b869f43f84f999$var$trisHelper","$07b869f43f84f999$var$bvhHelper1","$07b869f43f84f999$var$bvhHelper2","$07b869f43f84f999$var$bunnyGeom","$07b869f43f84f999$var$csgEvaluator","$07b869f43f84f999$var$needsUpdate","$07b869f43f84f999$var$materialMap","Map","$07b869f43f84f999$var$updateBrush","brush","type","complexity","geometry","dispose","SphereGeometry","Math","round","MathUtils","lerp","BoxGeometry","CylinderGeometry","TorusGeometry","TorusKnotGeometry","clone","toNonIndexed","position","attributes","array","Float32Array","count","i","l","length","setAttribute","BufferAttribute","$07b869f43f84f999$var$render","requestAnimationFrame","scale","x","max","y","z","updateMatrixWorld","update","startTime","performance","now","debug","enabled","evaluate","material","map","m","get","deltaTime","innerText","toFixed","setEdges","intersectionEdges","setTriangles","triangleIntersectsA","getTrianglesAsArray","getIntersectionsAsArray","visible","castShadow","render","async","document","getElementById","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","PCFSoftShadowMap","body","appendChild","domElement","Scene","DirectionalLight","set","add","target","AmbientLight","shadowCam","shadow","camera","mat","mapSize","setScalar","bias","normalBias","left","bottom","right","top","updateProjectionMatrix","PerspectiveCamera","far","$5Rd1x","OrbitControls","$fUhpq","TransformControls","addEventListener","e","value","Evaluator","Brush","GridMaterial","opacity","transparent","depthWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","side","DoubleSide","premultipliedAlpha","roughness","color","receiveShadow","attach","FrontSide","forEach","m1","m2","enableGrid","Mesh","BufferGeometry","MeshStandardMaterial","MeshBasicMaterial","EdgesHelper","TriangleSetHelper","$8Zfx2","MeshBVHVisualizer","gltf","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","scene","children","computeVertexNormals","$jiuw3","GUI","ADDITION","INTERSECTION","DIFFERENCE","onChange","v","needsUpdate","brush1Folder","addFolder","name","addColor","brush2Folder","debugFolder","aspect","code","setMode","$07b869f43f84f999$var$init"],"version":3,"file":"simple.5d9f0c3e.js.map"}